name: Build and publish Docker images

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

jobs:
  multiarch-build:
    name: Build and publish image
    strategy:
      matrix:
        base: [alpine, debian]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Retrieve version
        id: forego_version
        run: echo "VERSION=$(git describe --tags)" >> "$GITHUB_OUTPUT"

      - name: Get Docker image tags
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/nginx-proxy/forego
            nginxproxy/forego
          tags: |
            type=semver,pattern={{version}},enable=${{ matrix.base == 'alpine' }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ matrix.base == 'alpine' }}
            type=semver,suffix=-debian,pattern={{version}},enable=${{ matrix.base == 'debian' }}
            type=semver,suffix=-debian,pattern={{major}}.{{minor}},enable=${{ matrix.base == 'debian' }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' && matrix.base == 'alpine' }}
            type=raw,value=debian,enable=${{ github.ref == 'refs/heads/main' && matrix.base == 'debian' }}
          labels: |
            org.opencontainers.image.authors=Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag)
            org.opencontainers.image.version=${{ steps.forego_version.outputs.VERSION }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push the image
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          file: Dockerfile.${{ matrix.base }}
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
